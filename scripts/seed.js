const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function seed() {
  try {
    console.log('üå± Iniciando seed do banco de dados...');

    // Limpar dados existentes
    console.log('üßπ Limpando dados existentes...');
    await prisma.loan.deleteMany({});
    await prisma.book.deleteMany({});
    await prisma.user.deleteMany({});

    // Criar usu√°rios de exemplo
    console.log('üë• Criando usu√°rios...');
    const users = await Promise.all([
      prisma.user.create({
        data: {
          name: 'Jo√£o Silva',
          city: 'S√£o Paulo',
          category: 'STUDENT',
        },
      }),
      prisma.user.create({
        data: {
          name: 'Maria Santos',
          city: 'Rio de Janeiro',
          category: 'TEACHER',
        },
      }),
      prisma.user.create({
        data: {
          name: 'Pedro Oliveira',
          city: 'Belo Horizonte',
          category: 'LIBRARIAN',
        },
      }),
      prisma.user.create({
        data: {
          name: 'Ana Costa',
          city: 'Salvador',
          category: 'STUDENT',
        },
      }),
      prisma.user.create({
        data: {
          name: 'Carlos Ferreira',
          city: 'Bras√≠lia',
          category: 'TEACHER',
        },
      }),
    ]);

    console.log(`‚úÖ ${users.length} usu√°rios criados`);

    // Criar livros de exemplo
    console.log('üìö Criando livros...');
    const books = await Promise.all([
      prisma.book.create({
        data: {
          name: 'O Senhor dos An√©is',
          year: 1954,
          publisher: 'Allen & Unwin',
        },
      }),
      prisma.book.create({
        data: {
          name: 'Dom Casmurro',
          year: 1899,
          publisher: 'Livraria Garnier',
        },
      }),
      prisma.book.create({
        data: {
          name: '1984',
          year: 1949,
          publisher: 'Secker & Warburg',
        },
      }),
      prisma.book.create({
        data: {
          name: 'O Pequeno Pr√≠ncipe',
          year: 1943,
          publisher: 'Reynal & Hitchcock',
        },
      }),
      prisma.book.create({
        data: {
          name: 'Cem Anos de Solid√£o',
          year: 1967,
          publisher: 'Editorial Sudamericana',
        },
      }),
      prisma.book.create({
        data: {
          name: 'A Revolu√ß√£o dos Bichos',
          year: 1945,
          publisher: 'Secker & Warburg',
        },
      }),
      prisma.book.create({
        data: {
          name: 'O Hobbit',
          year: 1937,
          publisher: 'Allen & Unwin',
        },
      }),
      prisma.book.create({
        data: {
          name: 'Grande Sert√£o: Veredas',
          year: 1956,
          publisher: 'Jos√© Olympio',
        },
      }),
    ]);

    console.log(`‚úÖ ${books.length} livros criados`);

    // Criar alguns empr√©stimos de exemplo
    console.log('üìñ Criando empr√©stimos...');
    const loans = await Promise.all([
      prisma.loan.create({
        data: {
          userId: users[0].id, // Jo√£o Silva (STUDENT)
          bookId: books[0].id, // O Senhor dos An√©is
          returnDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000), // 10 dias
          status: 'ACTIVE',
        },
      }),
      prisma.loan.create({
        data: {
          userId: users[1].id, // Maria Santos (TEACHER)
          bookId: books[1].id, // Dom Casmurro
          returnDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 dias
          status: 'ACTIVE',
        },
      }),
      prisma.loan.create({
        data: {
          userId: users[2].id, // Pedro Oliveira (LIBRARIAN)
          bookId: books[2].id, // 1984
          returnDate: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000), // 60 dias
          status: 'ACTIVE',
        },
      }),
    ]);

    console.log(`‚úÖ ${loans.length} empr√©stimos criados`);

    // Resumo final
    const finalUsers = await prisma.user.count();
    const finalBooks = await prisma.book.count();
    const finalLoans = await prisma.loan.count();

    console.log('\nüéâ Seed conclu√≠do com sucesso!');
    console.log('üìä Resumo:');
    console.log(`   üë• Usu√°rios: ${finalUsers}`);
    console.log(`   üìö Livros: ${finalBooks}`);
    console.log(`   üìñ Empr√©stimos: ${finalLoans}`);
    console.log('\nüöÄ Agora voc√™ pode testar as APIs com dados reais!');
  } catch (error) {
    console.error('‚ùå Erro durante o seed:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

seed();
